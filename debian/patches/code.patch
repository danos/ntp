Index: ntp-4.2.2+dfsg/ntpd/ntp_intres.c
===================================================================
--- ntp-4.2.2+dfsg.orig/ntpd/ntp_intres.c	2006-06-06 20:16:40.000000000 +0000
+++ ntp-4.2.2+dfsg/ntpd/ntp_intres.c	2006-07-02 14:25:13.000000000 +0000
@@ -157,11 +157,11 @@
 struct ntp_res_t_pkt {		/* Tagged packet: */
 	void *tag;		/* For the caller */
 	u_int32 paddr;		/* IP to look up, or 0 */
-	char name[MAXHOSTNAMELEN]; /* Name to look up (if 1st byte is not 0) */
+        char *name;             /* Name to look up (if 1st byte is not 0) */
 };
 
 struct ntp_res_c_pkt {		/* Control packet: */
-	char name[MAXHOSTNAMELEN];
+	char *name;
 	u_int32 paddr;
 	int mode;
 	int version;
Index: ntp-4.2.2+dfsg/ntpd/ntpd.c
===================================================================
--- ntp-4.2.2+dfsg.orig/ntpd/ntpd.c	2006-06-06 20:16:46.000000000 +0000
+++ ntp-4.2.2+dfsg/ntpd/ntpd.c	2006-07-02 14:25:13.000000000 +0000
@@ -165,6 +165,8 @@
 char *user = NULL;		/* User to switch to */
 char *group = NULL;		/* group to switch to */
 char *chrootdir = NULL;		/* directory to chroot to */
+int have_caps = 0;              /* runtime check whether capabilities work,
+                                   leave at 0 here */
 int sw_uid;
 int sw_gid;
 char *endp;  
@@ -749,8 +751,29 @@
 	initializing = 0;
 
 
+#ifdef HAVE_LINUX_CAPABILITIES
+        {
+                /*  Check that setting capabilities actually works; we might be
+                 *  run on a kernel with disabled capabilities. We must not
+                 *  drop privileges in this case.
+                 */
+                cap_t caps;
+                if( ! ( caps = cap_from_text( "cap_sys_time,cap_setuid,cap_setgid,cap_sys_chroot=pe" ) ) ) {
+                        msyslog( LOG_ERR, "cap_from_text() failed: %m" );
+                        exit(-1);
+                }
+                if( cap_set_proc( caps ) == 0 ) 
+                    have_caps = 1;
+                cap_free( caps );
+        }
+#endif /* HAVE_LINUX_CAPABILITIES */
+
 #ifdef HAVE_DROPROOT
+#ifdef HAVE_LINUX_CAPABILITIES
+	if( droproot && have_caps ) {
+#else
 	if( droproot ) {
+#endif
 		/* Drop super-user privileges and chroot now if the OS supports this */
 
 #ifdef HAVE_LINUX_CAPABILITIES
@@ -777,7 +800,6 @@
 				if ((pw = getpwnam(user)) != NULL) {
 					sw_uid = pw->pw_uid;
 				} else {
-					errno = 0;
 					msyslog(LOG_ERR, "Cannot find user `%s'", user);
 					exit (-1);
 				}
@@ -834,7 +856,7 @@
 			 *  We drop all of them, except for the crucial one: cap_sys_time:
 			 */
 			cap_t caps;
-			if( ! ( caps = cap_from_text( "cap_sys_time=ipe" ) ) ) {
+			if( ! ( caps = cap_from_text( "cap_sys_time=pe" ) ) ) {
 				msyslog( LOG_ERR, "cap_from_text() failed: %m" );
 				exit(-1);
 			}
Index: ntp-4.2.2+dfsg/include/ntp_stdlib.h
===================================================================
--- ntp-4.2.2+dfsg.orig/include/ntp_stdlib.h	2006-06-06 20:16:19.000000000 +0000
+++ ntp-4.2.2+dfsg/include/ntp_stdlib.h	2006-07-02 14:25:13.000000000 +0000
@@ -4,6 +4,7 @@
 #include <sys/types.h>
 #include <sys/socket.h>
 #include "ntp_rfc2553.h"
+#include "ntp_refclock.h"
 
 #include "ntp_types.h"
 #include "ntp_string.h"
Index: ntp-4.2.2+dfsg/include/ntp_control.h
===================================================================
--- ntp-4.2.2+dfsg.orig/include/ntp_control.h	2006-06-06 20:16:17.000000000 +0000
+++ ntp-4.2.2+dfsg/include/ntp_control.h	2006-07-02 14:25:13.000000000 +0000
@@ -1,3 +1,5 @@
+#ifndef NTP_CONTROL
+#define NTP_CONTROL
 /*
  * ntp_control.h - definitions related to NTP mode 6 control messages
  */
@@ -285,3 +287,5 @@
 #define	TYPE_SYS	1
 #define	TYPE_PEER	2
 #define	TYPE_CLOCK	3
+
+#endif /* NTP_CONTROL */
Index: ntp-4.2.2+dfsg/include/ntpd.h
===================================================================
--- ntp-4.2.2+dfsg.orig/include/ntpd.h	2006-06-06 20:16:20.000000000 +0000
+++ ntp-4.2.2+dfsg/include/ntpd.h	2006-07-02 14:25:13.000000000 +0000
@@ -8,6 +8,7 @@
 #include "ntp_select.h"
 #include "ntp_malloc.h"
 #include "ntp_refclock.h"
+#include "ntp_control.h"
 #include "recvbuff.h"
 
 #ifdef SYS_WINNT
Index: ntp-4.2.2+dfsg/include/ntp_syscall.h
===================================================================
--- ntp-4.2.2+dfsg.orig/include/ntp_syscall.h	2004-02-25 05:57:56.000000000 +0000
+++ ntp-4.2.2+dfsg/include/ntp_syscall.h	2006-07-02 14:25:13.000000000 +0000
@@ -24,6 +24,15 @@
 
 #  define ntp_adjtime(t)	__adjtimex((t))
 
+#ifndef HAVE_STRUCT_NTPTIMEVAL
+struct ntptimeval
+{
+  struct timeval time;  /* current time (ro) */
+  long int maxerror;    /* maximum error (us) (ro) */
+  long int esterror;    /* estimated error (us) (ro) */
+};
+#endif
+
 static inline int
 ntp_gettime(
 	struct ntptimeval *ntv
@@ -44,6 +53,7 @@
 #endif
 	return(result);
 }
+
 # else /* !HAVE__ADJTIMEX */
 #  ifdef HAVE___NTP_GETTIME
 #   define ntp_gettime(t)	__ntp_gettime((t))
Index: ntp-4.2.2+dfsg/include/ntp.h
===================================================================
--- ntp-4.2.2+dfsg.orig/include/ntp.h	2006-06-06 20:16:17.000000000 +0000
+++ ntp-4.2.2+dfsg/include/ntp.h	2006-07-02 14:25:13.000000000 +0000
@@ -5,6 +5,7 @@
 #define NTP_H
 
 #include "ntp_types.h"
+#include "ntp_fp.h"
 #include <math.h>
 #ifdef OPENSSL
 #include "ntp_crypto.h"
Index: ntp-4.2.2+dfsg/libntp/msyslog.c
===================================================================
--- ntp-4.2.2+dfsg.orig/libntp/msyslog.c	2006-06-06 20:16:28.000000000 +0000
+++ ntp-4.2.2+dfsg/libntp/msyslog.c	2006-07-02 14:25:13.000000000 +0000
@@ -162,6 +162,7 @@
 	format_errmsg(nfmt, sizeof(nfmt), fmt, errval);
 
 	vsnprintf(buf, sizeof(buf), nfmt, ap);
+	buf[sizeof(buf)-1] = '\0'; 
 	addto_syslog(level, buf);
 	va_end(ap);
 }
Index: ntp-4.2.2+dfsg/libntp/icom.c
===================================================================
--- ntp-4.2.2+dfsg.orig/libntp/icom.c	2006-06-06 20:16:27.000000000 +0000
+++ ntp-4.2.2+dfsg/libntp/icom.c	2006-07-02 14:25:13.000000000 +0000
@@ -10,6 +10,7 @@
 #include <stdio.h>
 #include <fcntl.h>
 #include <errno.h>
+#include <sys/types.h>
 
 #include "ntp_tty.h"
 #include "l_stdlib.h"
Index: ntp-4.2.2+dfsg/ntpdate/ntpdate.c
===================================================================
--- ntp-4.2.2+dfsg.orig/ntpdate/ntpdate.c	2006-06-06 20:16:59.000000000 +0000
+++ ntp-4.2.2+dfsg/ntpdate/ntpdate.c	2006-07-02 14:25:13.000000000 +0000
@@ -1777,8 +1777,7 @@
 	   if (res->ai_family == AF_INET6)
 		if (setsockopt(fd[nbsock], IPPROTO_IPV6, IPV6_V6ONLY, (void*) &optval, sizeof(optval)) < 0) {
 			   netsyslog(LOG_ERR, "setsockopt() IPV6_V6ONLY failed: %m");
-			   exit(1);
-			   /*NOTREACHED*/
+			   /* exit(1); */
 		}
 #endif
 
@@ -1788,7 +1787,7 @@
 	/*
 	 * bind the socket to the NTP port
 	 */
-	if (!debug && !simple_query && !unpriv_port) {
+	if (!simple_query && !unpriv_port) {
 		if (bind(fd[nbsock], res->ai_addr, SOCKLEN(res->ai_addr)) < 0) {
 #ifndef SYS_WINNT
 			if (errno == EADDRINUSE)
@@ -2067,8 +2066,10 @@
 		adjtv.tv_usec = -adjtv.tv_usec;
 	}
 
-	if (adjtv.tv_usec != 0 && !debug) {
-		if (adjtime(&adjtv, &oadjtv) < 0) {
+	if (adjtv.tv_usec != 0) {
+		if (debug) {
+			msyslog(LOG_DEBUG, "Debug mode --not changing the system date");
+		} else if (adjtime(&adjtv, &oadjtv) < 0) {
 			msyslog(LOG_ERR, "Can't adjust the time of day: %m");
 			return 0;
 		}
@@ -2094,7 +2095,6 @@
 	int isneg;
 	int n;
 
-	if (debug) return 1;
 	/*
 	 * Take the absolute value of the offset
 	 */
@@ -2121,8 +2121,6 @@
 	 * line.
 	 */
 #endif
-	if (debug)
-		return 1;
 #ifdef FORCE_NTPDATE_STEP
 	LFPTOD(ts, dtemp);
 	return step_systime(dtemp);
@@ -2131,8 +2129,6 @@
 	return 1;
 #endif
 #else /* SLEWALWAYS */
-	if (debug)
-		return 1;
 	LFPTOD(ts, dtemp);
 	return step_systime(dtemp);
 #endif	/* SLEWALWAYS */
Index: ntp-4.2.2+dfsg/util/ntp-keygen.c
===================================================================
--- ntp-4.2.2+dfsg.orig/util/ntp-keygen.c	2006-06-06 20:17:17.000000000 +0000
+++ ntp-4.2.2+dfsg/util/ntp-keygen.c	2006-07-02 14:25:13.000000000 +0000
@@ -163,7 +163,7 @@
 #ifdef OPENSSL
 u_int	modulus = PLEN;		/* prime modulus size (bits) */
 #endif
-int	nkeys = 0;		/* MV keys */
+int	nkeys = 1;		/* MV keys */
 time_t	epoch;			/* Unix epoch (seconds) since 1970 */
 char	*hostname;		/* host name (subject name) */
 char	*trustname;		/* trusted host name (issuer name) */
@@ -447,9 +447,10 @@
 		 */
 		case 'V':
 			mvpar++;
-			if (sscanf(optarg, "%d", &nkeys) != 1) {
+			if (sscanf(optarg, "%d", &nkeys) != 1 || nkeys < 1) {
 				fprintf(stderr,
 				    "invalid option -V %s\n", optarg);
+				nkeys = 1;
 				++errflg;
 			}
 			continue;
Index: ntp-4.2.2+dfsg/util/tickadj.c
===================================================================
--- ntp-4.2.2+dfsg.orig/util/tickadj.c	2004-02-25 05:58:33.000000000 +0000
+++ ntp-4.2.2+dfsg/util/tickadj.c	2006-07-02 14:25:13.000000000 +0000
@@ -176,11 +176,15 @@
 
 #ifdef NLIST_STRUCT
 # include <nlist.h>
+#elif LIBELF_NLIST_STRUCT
+# include <libelf/nlist.h>
 #else /* not NLIST_STRUCT */ /* was defined(SYS_AUX3) || defined(SYS_AUX2) */
 # include <sys/resource.h>
 # include <sys/file.h>
 # include <a.out.h>
-# include <sys/var.h>
+# ifdef HAVE_SYS_VAR_H
+#  include <sys/var.h>
+# endif
 #endif
 
 #include "ntp_io.h"
Index: ntp-4.2.2+dfsg/scripts/ntptrace.in
===================================================================
--- ntp-4.2.2+dfsg.orig/scripts/ntptrace.in	2006-06-06 20:17:11.000000000 +0000
+++ ntp-4.2.2+dfsg/scripts/ntptrace.in	2006-07-02 14:25:13.000000000 +0000
@@ -8,6 +8,7 @@
 
 $ntpq = "ntpq";
 
+$Getopt::Std::STANDARD_HELP_VERSION=1;
 getopts('nm:');
 
 $dodns = 1;
