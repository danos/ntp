--- ntp-4.2.0a+stable.orig/ntpd/ntp_intres.c
+++ ntp-4.2.0a+stable/ntpd/ntp_intres.c
@@ -151,11 +151,11 @@
 struct ntp_res_t_pkt {		/* Tagged packet: */
 	void *tag;		/* For the caller */
 	u_int32 paddr;		/* IP to look up, or 0 */
-	char name[MAXHOSTNAMELEN]; /* Name to look up (if 1st byte is not 0) */
+        char *name;             /* Name to look up (if 1st byte is not 0) */
 };
 
 struct ntp_res_c_pkt {		/* Control packet: */
-	char name[MAXHOSTNAMELEN];
+	char *name;
 	u_int32 paddr;
 	int mode;
 	int version;
--- ntp-4.2.0a+stable.orig/ntpd/ntp_proto.c
+++ ntp-4.2.0a+stable/ntpd/ntp_proto.c
@@ -2293,8 +2293,8 @@
 			if (debug > 1)
 				printf("select: prefer offset %.6f\n",
 				    sys_offset);
-		}
 #endif
+		}
 	} else {
 
 		/*
--- ntp-4.2.0a+stable.orig/ntpd/ntp_config.c
+++ ntp-4.2.0a+stable/ntpd/ntp_config.c
@@ -5,21 +5,6 @@
 # include <config.h>
 #endif
 
-#ifdef HAVE_NETINFO
-# include <netinfo/ni.h>
-#endif
-
-#include <netdb.h>
-
-#include "ntpd.h"
-#include "ntp_io.h"
-#include "ntp_unixtime.h"
-#include "ntp_refclock.h"
-#include "ntp_filegen.h"
-#include "ntp_stdlib.h"
-#include "ntp_config.h"
-#include "ntp_cmdargs.h"
-
 #include <stdio.h>
 #include <ctype.h>
 #ifdef HAVE_SYS_PARAM_H
@@ -40,6 +25,21 @@
 extern HANDLE ResolverThreadHandle;
 #endif /* SYS_WINNT */
 
+#ifdef HAVE_NETINFO
+# include <netinfo/ni.h>
+#endif
+
+#include <netdb.h>
+
+#include "ntpd.h"
+#include "ntp_io.h"
+#include "ntp_unixtime.h"
+#include "ntp_refclock.h"
+#include "ntp_filegen.h"
+#include "ntp_stdlib.h"
+#include "ntp_config.h"
+#include "ntp_cmdargs.h"
+
 extern int priority_done;
 
 /*
--- ntp-4.2.0a+stable.orig/ntpd/jupiter.h
+++ ntp-4.2.0a+stable/ntpd/jupiter.h
@@ -1,4 +1,4 @@
-/* @(#) $Header: /daten/tmp/ex.16779/ntp-4.2.0a+stable.orig/ntpd/jupiter.h 1.2 01/10/08 21:18:16-04:00 stenn@whimsy.udel.edu $ (LBL) */
+/* @(#) $Header: /daten/tmp/ex.17575/ntp-4.2.0a+stable/ntpd/jupiter.h 1.2 01/10/08 21:18:16-04:00 stenn@whimsy.udel.edu $ (LBL) */
 
 /*
  * Rockwell Jupiter GPS receiver definitions
--- ntp-4.2.0a+stable.orig/ntpd/ntpd.c
+++ ntp-4.2.0a+stable/ntpd/ntpd.c
@@ -173,6 +173,8 @@
 char *user = NULL;		/* User to switch to */
 char *group = NULL;		/* group to switch to */
 char *chrootdir = NULL;		/* directory to chroot to */
+int have_caps = 0;              /* runtime check whether capabilities work,
+                                   leave at 0 here */
 int sw_uid;
 int sw_gid;
 char *endp;  
@@ -839,8 +841,29 @@
 # endif  
 #endif
 
+#ifdef HAVE_LINUX_CAPABILITIES
+        {
+                /*  Check that setting capabilities actually works; we might be
+                 *  run on a kernel with disabled capabilities. We must not
+                 *  drop privileges in this case.
+                 */
+                cap_t caps;
+                if( ! ( caps = cap_from_text( "cap_sys_time,cap_setuid,cap_setgid=pe" ) ) ) {
+                        msyslog( LOG_ERR, "cap_from_text() failed: %m" );
+                        exit(-1);
+                }
+                if( cap_set_proc( caps ) == 0 ) 
+                    have_caps = 1;
+                cap_free( caps );
+        }
+#endif /* HAVE_LINUX_CAPABILITIES */
+
 #ifdef HAVE_DROPROOT
+#ifdef HAVE_LINUX_CAPABILITIES
+	if( droproot && have_caps ) {
+#else
 	if( droproot ) {
+#endif
 		/* Drop super-user privileges and chroot now if the OS supports this */
 
 #ifdef HAVE_LINUX_CAPABILITIES
@@ -867,7 +890,6 @@
 				if ((pw = getpwnam(user)) != NULL) {
 					sw_uid = pw->pw_uid;
 				} else {
-					errno = 0;
 					msyslog(LOG_ERR, "Cannot find user `%s'", user);
 					exit (-1);
 				}
@@ -881,7 +903,7 @@
 			} else {
 getgroup:	
 				if ((gr = getgrnam(group)) != NULL) {
-					sw_gid = pw->pw_gid;
+					sw_gid = gr->gr_gid;
 				} else {
 					errno = 0;
 					msyslog(LOG_ERR, "Cannot find group `%s'", group);
@@ -924,7 +946,7 @@
 			 *  We drop all of them, except for the crucial one: cap_sys_time:
 			 */
 			cap_t caps;
-			if( ! ( caps = cap_from_text( "cap_sys_time=ipe" ) ) ) {
+			if( ! ( caps = cap_from_text( "cap_sys_time=pe" ) ) ) {
 				msyslog( LOG_ERR, "cap_from_text() failed: %m" );
 				exit(-1);
 			}
--- ntp-4.2.0a+stable.orig/include/ntp_stdlib.h
+++ ntp-4.2.0a+stable/include/ntp_stdlib.h
@@ -4,6 +4,7 @@
 #include <sys/types.h>
 #include <sys/socket.h>
 #include "ntp_rfc2553.h"
+#include "ntp_refclock.h"
 
 #include "ntp_types.h"
 #include "ntp_string.h"
@@ -134,7 +135,6 @@
 extern u_int	cache_keylen;		/* key length */
 
 /* clocktypes.c */
-struct clktype;
 extern struct clktype clktypes[];
 
 /* getopt.c */
--- ntp-4.2.0a+stable.orig/include/rsa_md5.h
+++ ntp-4.2.0a+stable/include/rsa_md5.h
@@ -23,8 +23,8 @@
    documentation and/or software.  
  */
 
-#ifndef _MD5_H_
-#define _MD5_H_ 1
+#ifndef NTP_MD5_H
+#define NTP_MD5_H 1
 
 #ifdef __cplusplus
 extern "C" {
@@ -33,6 +33,10 @@
 /*#include "global.h"	*/
 
 /* MD5 context. */
+/* Renamed, as to not conflict with other MD5 implementations included
+ * from elsewhere. */
+#define MD5_CTX NTP_MD5_CTX
+
 typedef struct {
   UINT4 state[4];                                   /* state (ABCD) */
   UINT4 count[2];        /* number of bits, modulo 2^64 (lsb first) */
@@ -48,4 +52,4 @@
 }
 #endif
 
-#endif
+#endif /* NTP_MD5_H */
--- ntp-4.2.0a+stable.orig/include/ntp_control.h
+++ ntp-4.2.0a+stable/include/ntp_control.h
@@ -1,3 +1,5 @@
+#ifndef NTP_CONTROL
+#define NTP_CONTROL
 /*
  * ntp_control.h - definitions related to NTP mode 6 control messages
  */
@@ -283,3 +285,5 @@
 #define	TYPE_SYS	1
 #define	TYPE_PEER	2
 #define	TYPE_CLOCK	3
+
+#endif /* NTP_CONTROL */
--- ntp-4.2.0a+stable.orig/include/ntpd.h
+++ ntp-4.2.0a+stable/include/ntpd.h
@@ -8,6 +8,7 @@
 #include "ntp_select.h"
 #include "ntp_malloc.h"
 #include "ntp_refclock.h"
+#include "ntp_control.h"
 #include "recvbuff.h"
 
 #ifdef SYS_WINNT
@@ -225,7 +226,6 @@
 #endif
 
 /* ntp_control.c */
-struct ctl_trap;
 extern struct ctl_trap ctl_trap[];
 extern int	num_ctl_traps;
 extern keyid_t	ctl_auth_keyid;		/* keyid used for authenticating write requests */
--- ntp-4.2.0a+stable.orig/include/ntp_syscall.h
+++ ntp-4.2.0a+stable/include/ntp_syscall.h
@@ -24,6 +24,15 @@
 
 #  define ntp_adjtime(t)	__adjtimex((t))
 
+#ifndef HAVE_STRUCT_NTPTIMEVAL
+struct ntptimeval
+{
+  struct timeval time;  /* current time (ro) */
+  long int maxerror;    /* maximum error (us) (ro) */
+  long int esterror;    /* estimated error (us) (ro) */
+};
+#endif
+
 static inline int
 ntp_gettime(
 	struct ntptimeval *ntv
@@ -44,6 +53,7 @@
 #endif
 	return(result);
 }
+
 # else /* !HAVE__ADJTIMEX */
 #  ifdef HAVE___NTP_GETTIME
 #   define ntp_gettime(t)	__ntp_gettime((t))
--- ntp-4.2.0a+stable.orig/include/ntp.h
+++ ntp-4.2.0a+stable/include/ntp.h
@@ -5,6 +5,7 @@
 #define NTP_H
 
 #include "ntp_types.h"
+#include "ntp_fp.h"
 #include <math.h>
 #ifdef OPENSSL
 #include "ntp_crypto.h"
--- ntp-4.2.0a+stable.orig/libntp/msyslog.c
+++ ntp-4.2.0a+stable/libntp/msyslog.c
@@ -163,6 +163,7 @@
 	format_errmsg(nfmt, sizeof(nfmt), fmt, errval);
 
 	vsnprintf(buf, sizeof(buf), nfmt, ap);
+	buf[sizeof(buf)-1] = '\0'; 
 	addto_syslog(level, buf);
 	va_end(ap);
 }
--- ntp-4.2.0a+stable.orig/libntp/icom.c
+++ ntp-4.2.0a+stable/libntp/icom.c
@@ -10,6 +10,7 @@
 #include <stdio.h>
 #include <fcntl.h>
 #include <errno.h>
+#include <sys/types.h>
 
 #include "ntp_tty.h"
 #include "l_stdlib.h"
--- ntp-4.2.0a+stable.orig/ntpdate/ntpdate.c
+++ ntp-4.2.0a+stable/ntpdate/ntpdate.c
@@ -1321,6 +1321,30 @@
 }
 
 
+/*
+ * is_unreachable - check to see if we have a route to given destination
+ *		    (non-blocking).
+ */
+static int
+is_reachable (struct sockaddr_storage *dst)
+{
+	SOCKET sockfd;
+
+	sockfd = socket(dst->ss_family, SOCK_DGRAM, 0);
+	if (sockfd == -1) {
+		return 0;
+	}
+
+	if(connect(sockfd, (struct sockaddr *)dst, SOCKLEN(dst))) {
+		closesocket(sockfd);
+		return 0;
+	}
+	closesocket(sockfd);
+	return 1;
+}
+
+
+
 /* XXX ELIMINATE: merge BIG slew into adj_systime in lib/systime.c */
 /*
  * addserver - determine a server's address and allocate a new structure
@@ -1333,7 +1357,7 @@
 {
 	register struct server *server;
 	/* Address infos structure to store result of getaddrinfo */
-	struct addrinfo *addrResult;
+	struct addrinfo *addrResult, *ptr;
 	/* Address infos structure to store hints for getaddrinfo */
 	struct addrinfo hints;
 	/* Error variable for getaddrinfo */
@@ -1364,22 +1388,28 @@
 	}
 #endif
 
-	server = (struct server *)emalloc(sizeof(struct server));
-	memset((char *)server, 0, sizeof(struct server));
-
-	/* For now we only get the first returned server of the addrinfo list */
-	memset(&(server->srcadr), 0, sizeof(struct sockaddr_storage));
-	memcpy(&(server->srcadr), addrResult->ai_addr, addrResult->ai_addrlen);
-	server->event_time = ++sys_numservers;
-	if (sys_servers == NULL)
-		sys_servers = server;
-	else {
-		struct server *sp;
-
-		for (sp = sys_servers; sp->next_server != NULL;
-		     sp = sp->next_server) ;
-		sp->next_server = server;
+	/* We must get all returned server in case the first one fails */
+	for (ptr = addrResult; ptr != NULL; ptr = ptr->ai_next) {
+		if (is_reachable ((struct sockaddr_storage *)ptr->ai_addr)) {
+			server = (struct server *)emalloc(sizeof(struct server));
+			memset((char *)server, 0, sizeof(struct server));
+
+			memset(&(server->srcadr), 0, sizeof(struct sockaddr_storage));
+			memcpy(&(server->srcadr), ptr->ai_addr, ptr->ai_addrlen);
+			server->event_time = ++sys_numservers;
+			if (sys_servers == NULL)
+				sys_servers = server;
+			else {
+				struct server *sp;
+
+				for (sp = sys_servers; sp->next_server != NULL;
+				     sp = sp->next_server) ;
+				sp->next_server = server;
+			}
+		}
 	}
+
+	freeaddrinfo(addrResult);
 }
 
 
@@ -1717,8 +1747,7 @@
 	   if (res->ai_family == AF_INET6)
 		if (setsockopt(fd[nbsock], IPPROTO_IPV6, IPV6_V6ONLY, (void*) &optval, sizeof(optval)) < 0) {
 			   netsyslog(LOG_ERR, "setsockopt() IPV6_V6ONLY failed: %m");
-			   exit(1);
-			   /*NOTREACHED*/
+			   /* exit(1); */
 		}
 #endif
 
@@ -1728,7 +1757,7 @@
 	/*
 	 * bind the socket to the NTP port
 	 */
-	if (!debug && !simple_query && !unpriv_port) {
+	if (!simple_query && !unpriv_port) {
 		if (bind(fd[nbsock], res->ai_addr, SOCKLEN(res->ai_addr)) < 0) {
 #ifndef SYS_WINNT
 			if (errno == EADDRINUSE)
@@ -2008,8 +2037,10 @@
 		adjtv.tv_usec = -adjtv.tv_usec;
 	}
 
-	if (adjtv.tv_usec != 0 && !debug) {
-		if (adjtime(&adjtv, &oadjtv) < 0) {
+	if (adjtv.tv_usec != 0) {
+		if (debug) {
+			msyslog(LOG_DEBUG, "Debug mode --not changing the system date");
+		} else if (adjtime(&adjtv, &oadjtv) < 0) {
 			msyslog(LOG_ERR, "Can't adjust the time of day: %m");
 			return 0;
 		}
@@ -2035,7 +2066,6 @@
 	int isneg;
 	int n;
 
-	if (debug) return 1;
 	/*
 	 * Take the absolute value of the offset
 	 */
@@ -2062,8 +2092,6 @@
 	 * line.
 	 */
 #endif
-	if (debug)
-		return 1;
 #ifdef FORCE_NTPDATE_STEP
 	LFPTOD(ts, dtemp);
 	return step_systime(dtemp);
@@ -2072,8 +2100,6 @@
 	return 1;
 #endif
 #else /* SLEWALWAYS */
-	if (debug)
-		return 1;
 	LFPTOD(ts, dtemp);
 	return step_systime(dtemp);
 #endif	/* SLEWALWAYS */
--- ntp-4.2.0a+stable.orig/util/ntp-keygen.c
+++ ntp-4.2.0a+stable/util/ntp-keygen.c
@@ -162,7 +162,7 @@
 #ifdef OPENSSL
 u_int	modulus = PLEN;		/* prime modulus size (bits) */
 #endif
-int	nkeys = 0;		/* MV keys */
+int	nkeys = 1;		/* MV keys */
 time_t	epoch;			/* Unix epoch (seconds) since 1970 */
 char	*hostname;		/* host name (subject name) */
 char	*trustname;		/* trusted host name (issuer name) */
@@ -254,13 +254,16 @@
 #endif
 
 #ifdef OPENSSL
+#if 0 /* This is stupid. Ever heard of upwards-compatible library versions? */
 	if (SSLeay() != OPENSSL_VERSION_NUMBER) {
 		fprintf(stderr,
 		    "OpenSSL version mismatch. Built against %lx, you have %lx\n",
 		    OPENSSL_VERSION_NUMBER, SSLeay());
 		return (-1);
 
-	} else {
+	} else
+#endif
+	{
 		fprintf(stderr,
 		    "Using OpenSSL version %lx\n", SSLeay());
 	}
@@ -439,9 +442,11 @@
 		 */
 		case 'V':
 			mvpar++;
-			if (sscanf(optarg, "%d", &nkeys) != 1)
+			if (sscanf(optarg, "%d", &nkeys) != 1 || nkeys < 1) {
 				fprintf(stderr,
 				    "invalid option -V %s\n", optarg);
+				nkeys = 1;
+			}
 			continue;
 #endif
 
--- ntp-4.2.0a+stable.orig/util/tickadj.c
+++ ntp-4.2.0a+stable/util/tickadj.c
@@ -176,11 +176,15 @@
 
 #ifdef NLIST_STRUCT
 # include <nlist.h>
+#elif LIBELF_NLIST_STRUCT
+# include <libelf/nlist.h>
 #else /* not NLIST_STRUCT */ /* was defined(SYS_AUX3) || defined(SYS_AUX2) */
 # include <sys/resource.h>
 # include <sys/file.h>
 # include <a.out.h>
-# include <sys/var.h>
+# ifdef HAVE_SYS_VAR_H
+#  include <sys/var.h>
+# endif
 #endif
 
 #include "ntp_io.h"
--- ntp-4.2.0a+stable.orig/scripts/ntptrace.in
+++ ntp-4.2.0a+stable/scripts/ntptrace.in
@@ -8,6 +8,7 @@

 $ntpq = "ntpq";

+$Getopt::Std::STANDARD_HELP_VERSION=1;
 getopts('n');

 $dodns = 1;
